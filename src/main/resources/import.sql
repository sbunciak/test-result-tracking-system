-- You can use this file to load seed data into the database using SQL statements
-- Import initial (testing) data

insert into Product (id, name, description) values (0, 'JBDS', 'JBoss Developer Studio');
insert into Product (id, name, description) values (1, 'SOA-P', 'SOA Platform');

insert into ProductVersion (id, description, productVersion, product_id) values (0, 'Latest stable' , '6.0.0' ,0);
insert into ProductVersion (id, description, productVersion, product_id) values (1, 'Latest nightly' , '7.0.0' ,0);

insert into ProductBuild (id, label, productVersion_id) values (0, 'Alpha1' , 0);
insert into ProductBuild (id, label, productVersion_id) values (1, 'Alpha2' , 0);
insert into ProductBuild (id, label, productVersion_id) values (2, 'Beta1' , 0);
insert into ProductBuild (id, label, productVersion_id) values (3, 'Beta2' , 0);
insert into ProductBuild (id, label, productVersion_id) values (4, 'CR1' , 0);
insert into ProductBuild (id, label, productVersion_id) values (5, 'GA' , 0);

insert into Axis (id, category, description) values (0, 'Java', 'Platform indepentend environment');
insert into Axis (id, category, description) values (1, 'OS', 'Operation system type');

insert into AxisValue (id, value, axis_id) values (0, '1.6', 0);
insert into AxisValue (id, value, axis_id) values (1, '1.7', 0);
insert into AxisValue (id, value, axis_id) values (2, 'Linux', 1);
insert into AxisValue (id, value, axis_id) values (3, 'Windows', 1);

insert into TestPlan (id, description, name, rules, type, productVersion_id) values (0, 'Dummy description', 'Test plan for JBDS 6', '', 'SMOKE', 0);
insert into TestPlan (id, description, name, rules, type, productVersion_id) values (1, 'Dummy description', 'Test plan for JBDS 7', '', 'SMOKE', 1);

insert into TestCase (id, ciLink, defaultTester, title, testPlan_id) values (0, 'http://jenkins.brq.redhat.com', 'sbunciak', 'JBDS can be installed without errors', 0);

-- insert table TestRun (id, name, testPlan_id) values (0, 'Test Run ')

-- create table Axis (id bigint generated by default as identity, category varchar(255) not null, description varchar(255), primary key (id))
-- create table AxisConfig (id bigint generated by default as identity, priority integer not null, axisValue_id bigint not null, productVersion_id bigint not null, primary key (id))
-- create table AxisValue (id bigint generated by default as identity, value varchar(255) not null, axis_id bigint not null, primary key (id))
-- create table Product (id bigint generated by default as identity, description varchar(255), name varchar(255) not null, primary key (id))
-- create table ProductBuild (id bigint generated by default as identity, label varchar(255) not null, productVersion_id bigint not null, primary key (id))
-- create table ProductVersion (id bigint generated by default as identity, description varchar(255), productVersion varchar(255) not null, product_id bigint not null, primary key (id))
-- create table TestCase (id bigint generated by default as identity, ciLink varchar(255), defaultTester varchar(255), title varchar(255) not null, testPlan_id bigint not null, primary key (id))
-- create table TestPlan (id bigint generated by default as identity, description varchar(255), name varchar(255) not null, rules clob, type varchar(255) not null, productVersion_id bigint not null, primary key (id))
-- create table TestRun (id bigint generated by default as identity, name varchar(255) not null, testPlan_id bigint not null, primary key (id))
-- create table TestRunCase (id bigint generated by default as identity, assignee varchar(255), bugTrLink varchar(255), ciLink varchar(255), result varchar(255), title varchar(255) not null, testRun_id bigint not null, primary key (id))
-- create table TestRunCase_AxisConfig (TestRunCase_id bigint not null, criterias_id bigint not null, unique (criterias_id))